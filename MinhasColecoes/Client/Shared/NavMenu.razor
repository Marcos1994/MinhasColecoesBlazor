@implements IDisposable
@inject HttpService httpService

<nav class="navbar navbar-expand-lg navbar-toggleable-sm navbar-dark bg-primary border-bottom box-shadow mb-3">
	<div class="container">
		<a class="navbar-brand " href="">Minhas Coleções</a>
		<ul class="navbar-nav flex-grow-1">
			<li class="nav-item">
				<NavLink class="nav-link" href="colecoes">
					<span class="bi-box-seam mr-3" title="Coleções"
						  style="font-size: 20px; line-height: 20px;"></span> Coleções
				</NavLink>
			</li>
		</ul>
		<div class="align-self-end">
			<ul class="navbar-nav">
				<li class="nav-item px-3">
					@if (usuarioAtual != null)
					{
						<NavLink class="nav-link" href="perfil">
							<span class="bi-person-circle mr-3" title="Perfil"
								  style="font-size: 20px; line-height: 20px;"></span> Perfil
						</NavLink>
					}
					else
					{
						<NavLink class="nav-link" href="login">
							<span class="bi-person-circle mr-3" title="Login"
								  style="font-size: 20px; line-height: 20px;"></span> Login
						</NavLink>
					}
				</li>
			</ul>
		</div>
	</div>
</nav>

@code {
	private UsuarioLoginVM usuarioAtual;

	protected override async Task OnInitializedAsync()
	{
		httpService.OnChange += VerificarUsuario;
		usuarioAtual = await httpService.GetUser();
	}

	private void VerificarUsuario()
	{
		usuarioAtual = httpService.GetUserSync();
		StateHasChanged();
	}

	public void Dispose()
	{
		httpService.OnChange -= VerificarUsuario;
	}
}
