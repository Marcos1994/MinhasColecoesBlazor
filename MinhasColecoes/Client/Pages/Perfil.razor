@page "/perfil"
@page "/perfil/{Id:int}"
@using MinhasColecoes.Shared.ViewModels;
@inject UsuarioAPI usuarioApi
@inject NavigationManager navigationManager


<div class="row">
	<div class="col-12 col-md-6 col-lg-4 mb-3 mb-md-0">
		@if (usuario != null)
		{
			@* ------------ Nome do Usuário ------------ *@
			<div class="row">
				<h1>@usuario.Nome</h1>
			</div>
			@* --------------- Descrição --------------- *@
			<div class="row">
				<p>@usuario.Descricao</p>
			</div>
			@* ----- Resumo das coleções - Titulo ------ *@
			<div class="row mt-3">
				<h3>Resumo de Coleções:</h3>
			</div>
			@* ---------- Resumo das coleções ---------- *@
			<div class="row text-primary">
				<div class="col-3">
					<i class="bi-box-seam" title="Total de coleções"
					   style="font-size: 20px; line-height: 20px;"></i>
					@(usuario.ColecoesMembro.Count())
				</div>
				<div class="col-3">
					<i class="bi-eye-slash-fill" title="Dono de coleções particulares"
					   style="font-size: 20px; line-height: 20px;"></i>
					@(usuario.QuantidadeParticular)
				</div>
				<div class="col-3">
					<i class="bi-flag-fill" title="Dono de coleções públicas"
					   style="font-size: 20px; line-height: 20px;"></i>
					@(usuario.QuantidadeDono)
				</div>
				<div class="col-3">
					<i class="bi-person-circle" title="Membro de coleções"
					   style="font-size: 20px; line-height: 20px;"></i>
					@(usuario.QuantidadeMembro)
				</div>
			</div>

			<div class="row my-3">
				<div class="col-8">
					<div class="d-flex">
						<a class="btn btn-primary">Editar perfil</a>
					</div>
				</div>
				<div class="col-4">
					<div class="d-flex flex-row-reverse justify-content-start">
						<a class="btn btn-danger text-white" @onclick="Logout">Sair</a>
					</div>
				</div>
			</div>
		}
	</div>
	<div class="col-12 col-md-6 col-lg-8 mb-3">

	</div>
</div>


@code {
	[Parameter]
	public int? Id { get; set; }

	private UsuarioVM usuario;

	protected override async Task OnParametersSetAsync()
	{
		HttpResponseMessage response = await usuarioApi.GetUsuario(Id);

		if (response.IsSuccessStatusCode)
			usuario = await response.Content.ReadFromJsonAsync<UsuarioVM>();
	}

	protected async Task Logout()
	{
		await usuarioApi.Logout();
		navigationManager.NavigateTo("/", true);
	}
}
