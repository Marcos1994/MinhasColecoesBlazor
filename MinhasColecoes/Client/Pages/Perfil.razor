@page "/perfil"
@page "/perfil/{Id:int}"
@inject UsuarioApiService usuarioService
@inject ColecaoApiService colecaoService
@inject NavigationManager navManager


<div class="row">
	<div class="col-12 col-md-6 col-lg-4 mb-3 mb-md-0">
		@* ------------ Nome do Usuário ------------ *@
		<div class="row">
			<h1>@usuario.Nome</h1>
		</div>
		@* --------------- Descrição --------------- *@
		<div class="row">
			<p>@usuario.Descricao</p>
		</div>
		@* ----- Resumo das coleções - Titulo ------ *@
		<div class="row mt-3">
			<h3>Resumo de Coleções:</h3>
		</div>
		@if (Id == null)
		{
			@* ---------- Resumo das coleções ---------- *@
			<div class="row text-primary">
				<div class="col-3">
					<i class="bi-box-seam" title="Total de coleções"
					   style="font-size: 20px; line-height: 20px;"></i>
					@(usuario.ColecoesMembro.Count())
				</div>
				<div class="col-3">
					<i class="bi-eye-slash-fill" title="Dono de coleções particulares"
					   style="font-size: 20px; line-height: 20px;"></i>
					@(usuario.QuantidadeParticular)
				</div>
				<div class="col-3">
					<i class="bi-flag-fill" title="Dono de coleções públicas"
					   style="font-size: 20px; line-height: 20px;"></i>
					@(usuario.QuantidadeDono)
				</div>
				<div class="col-3">
					<i class="bi-person-circle" title="Membro de coleções"
					   style="font-size: 20px; line-height: 20px;"></i>
					@(usuario.QuantidadeMembro)
				</div>
			</div>

			<div class="row my-3">
				<div class="col-8">
					<div class="d-flex">
						<a class="btn btn-primary">Editar perfil</a>
					</div>
				</div>
				<div class="col-4">
					<div class="d-flex flex-row-reverse justify-content-start">
						<a class="btn btn-danger text-white" @onclick="Logout">Sair</a>
					</div>
				</div>
			</div>
		}
	</div>
	<div class="col-12 col-md-6 col-lg-8 mb-3">
		<div class="row">
			<div class="col 12">
				<SearchAndCreateBar Mensagem="Nome da Coleção" OnClickBuscarCallback="BuscarColecoes" OnClickCadastrarCallback="Cadastrar" CadastroHabilitado="@(Id == null)" />
			</div>
			<div class="col 12">
				@if (totalPaginas > 1)
				{
					<Paginacao TotalPaginas="@totalPaginas" PaginaAtual="@paginaAtual" OnClickCallback="@NavegarPaginacao" />
				}
			</div>
		</div>

		<div class="row row-cols-2 row-cols-md-1 row-cols-lg-3 row-cols-xxl-4 g-3">
			@foreach (ColecaoBasicVM c in colecoesPaginadas)
			{
				<CardColecao colecao="c" OnClickCallback="NavegarPara" />
			}
		</div>
	</div>
</div>


@code {
	[Parameter]
	public int? Id { get; set; }

	private UsuarioVM usuario = new UsuarioVM();
	private List<ColecaoBasicVM> colecoes = new List<ColecaoBasicVM>();
	List<ColecaoBasicVM> colecoesPaginadas = new List<ColecaoBasicVM>();
	private int totalPaginas = 1;
	private int paginaAtual = 1;
	private int itensPorPagina = 16;
	private string nomeColecao = "";

	protected override async Task OnParametersSetAsync()
	{
		try
		{
			usuario = await usuarioService.GetUsuario(Id);
		}
		catch (HttpResponseException ex)
		{
			HttpResponseMessage response = ex.Response;
		}

		try
		{
			usuario.SetColecoesMembro(await colecaoService.GetByUser("", Id));
		}
		catch (HttpResponseException ex)
		{
			HttpResponseMessage response = ex.Response;
		}

		BuscarColecoes();
	}

	protected async Task Logout()
	{
		await usuarioService.Logout();
		navManager.NavigateTo("/");
	}

	private void BuscarColecoes(string nome = "")
	{
		colecoes = usuario.ColecoesMembro.Where(c => c.Nome.Contains(nome, StringComparison.OrdinalIgnoreCase)).ToList();
		totalPaginas = Convert.ToInt32(Math.Floor(Convert.ToDouble(colecoes.Count() / itensPorPagina))) + 1;
		NavegarPaginacao(1);
	}

	protected void NavegarPaginacao(int paginaAtual)
	{
		this.paginaAtual = paginaAtual;
		colecoesPaginadas = colecoes.Skip((paginaAtual - 1) * itensPorPagina).Take(itensPorPagina).ToList();
	}

	private async Task Cadastrar()
	{
		navManager.NavigateTo("/novacolecao");
	}

	private async Task NavegarPara(ColecaoBasicVM colecao)
	{
		navManager.NavigateTo($"/colecao/{colecao.Id}");
	}
}
