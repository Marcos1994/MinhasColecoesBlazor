@page "/login"
@using MinhasColecoes.Shared.InputModels;
@inject NavigationManager navManager
@inject UsuarioApiService usuarioService

<div class="login-form">
	<h1 class="title-gradient">Login</h1>
	<div class="container">
		<div class="form-floating mb-3">
			<input class="form-control" aria-describedby="emailHelp" @bind="usuarioIM.Login" autofocus />
			<label>E-mail: </label>
		</div>
		<div class="form-floating mb-3">
			<input class="form-control" type="password" @bind="usuarioIM.Senha" />
			<label>Senha: </label>
		</div>
		<div class="text-center">
			<button class="btn btn-lg btn-primary" @onclick="Logar">Confirmar</button>
		</div>
	</div>
</div>

@code {
	private UsuarioLoginIM usuarioIM = new UsuarioLoginIM();

	private async Task Logar()
	{
		try
		{
			UsuarioLoginVM usuarioLogin = await usuarioService.Login(usuarioIM);
			navManager.NavigateTo("/perfil");
		}
		catch (HttpResponseException ex)
		{
			var parameters = new ModalParameters();
			parameters.Add("ResponseException", ex);
			if (ex.Response.StatusCode == HttpStatusCode.NotFound)
				parameters.Add("Mensagem", "Combinação de Login e Senha não encontrada.");

			var messageForm = modal.Show<ModalResponseErro>(ex.Response.StatusCode.ToString(), parameters, new ModalOptions() { HideCloseButton = true });
		}
	}
}
